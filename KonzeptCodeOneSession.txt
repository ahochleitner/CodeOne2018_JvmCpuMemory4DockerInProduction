MEMORY
===========
11-MemoryInfo.java    lokal JDK8/JDK10
...................

12-runAllMemoryInfo.sh     7..10     docker
...................
             + .m 1024m
             + -XX:+UnlockExcpt -XX:+CGroupMemLimit

13-MemEat.java       lokal   JDK8/JDK10
...................
             docker jdk8   bash ./run.sh   MemEat
                       10

             docker jdk8 bash ./run.sh MemEat
                       10
                    +  --memory-swappiness

                    +  -XX:UnlockException  .XX;+CGroupMemLimit

14-Memory-Consumer       runMemoryConsumer.sh     local
...................
             docker jdk8 bash ./runMemoryConsumer.sh
                       10    oder gleich

                    -m 1024m
                    --memory-swappiness
                    -XX:+UnlockExcp  -XX:+CGroupMemLimit
 

CPU
===========
                 CpuInfo.java
                 runAllCpuInfo.sh    7 8 9 10
                                        + --cpus .5   CGroup wirkungslos!!!
                 CpuBench.java
                 runAllCpuBenchmark.sh   7 8 9 10
                      + -cpus .5
                      + --cpus .5  --cpuset-cpus 1


THREADS
===========
                HelloWorld.java
                      2000
                      200000     jps, ps / pstree lokal
                + jconsole

                showJavaThreadInfo.sh   --I
                showThreads,sh          --I
                showThreadsCount.sh     --I

                docker .... 8 --name jdk       / docker exec jdk  ./runAllThreadInfo.sh
                           10
                              --cpus 1
                              --cpus 2

K8S
===========
                snx & shuttle aufbauen, watch kubectl

                 jdk8
                 20/20
              kubectl create -f

              kubectl exec memory-consumer    jps
              kubectl exec memory-consumer /opt/local/listThreads.sh   7




